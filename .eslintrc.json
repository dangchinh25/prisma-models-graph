{
    "env": {
        "es6": true,
        "node": true,
        "jest": true
    },
    "parserOptions": {
        "ecmaVersion": 2018,
        "sourceType": "module"
    },
    "parser": "@typescript-eslint/parser",
    "plugins": [
        "@typescript-eslint"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:jest/recommended",
        "plugin:jest-formatting/strict"
    ],
    "rules": {
        "indent": [
            "error",
            4,
            {
                "SwitchCase": 1
            }
        ],
        "max-len": [
            "error",
            {
                "code": 120,
                "ignoreTemplateLiterals": true,
                "ignoreStrings": true,
                "ignoreRegExpLiterals": true,
                "ignoreUrls": true,
                "comments": 120,
                "ignorePattern": "eslint-*|@typescript-eslint-*|\\):\\sPromise<Either<|\\sinterface\\s\\w"
            }
        ],
        "lines-around-comment": [
            "error",
            {
                "beforeLineComment": true,
                "beforeBlockComment": true,
                "allowBlockStart": true,
                "ignorePattern": "-"
            }
        ],
        "no-inline-comments": "error",
        "spaced-comment": [
            "error",
            "always",
            {
                "line": {
                    "exceptions": [
                        "-"
                    ]
                },
                "block": {
                    "exceptions": [
                        "-"
                    ]
                }
            }
        ],
        "comma-style": [
            "error",
            "last",
            {
                "exceptions": {
                    "CallExpression": false,
                    "ArrayExpression": false,
                    "ArrayPattern": false,
                    "FunctionExpression": false,
                    "FunctionDeclaration": false,
                    "ArrowFunctionExpression": false,
                    "ObjectPattern": false,
                    "VariableDeclaration": false,
                    "NewExpression": false,
                    "ImportDeclaration": false
                }
            }
        ],
        "comma-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "comma-dangle": [
            "error",
            "never"
        ],
        "quotes": [
            "error",
            "single",
            {
                "allowTemplateLiterals": true
            }
        ],
        "linebreak-style": [
            "warn",
            "unix"
        ],
        "space-in-parens": [
            "error",
            "always"
        ],
        "array-bracket-spacing": [
            "error",
            "always"
        ],
        "computed-property-spacing": [
            "error",
            "always"
        ],
        "object-curly-spacing": [
            "error",
            "always"
        ],
        "object-curly-newline": [
            "error",
            {
                "ObjectExpression": {
                    "multiline": true,
                    "minProperties": 4
                },
                "ObjectPattern": {
                    "multiline": true,
                    "minProperties": 4
                },
                "ImportDeclaration": {
                    "multiline": true,
                    "minProperties": 3
                }
            }
        ],
        "array-element-newline": [
            "error",
            {
                "multiline": true,
                "minItems": 2
            }
        ],
        "no-array-constructor": "error",
        "object-property-newline": [
            "error",
            {
                "allowAllPropertiesOnSameLine": true
            }
        ],
        "key-spacing": [
            "error",
            {
                "beforeColon": false
            }
        ],
        "template-curly-spacing": [
            "error",
            "always"
        ],
        "brace-style": [
            "error",
            "1tbs",
            {
                "allowSingleLine": true
            }
        ],
        "space-before-function-paren": "off",
        "@typescript-eslint/space-before-function-paren": [
            "error",
            "always"
        ],
        "func-call-spacing": [
            "error",
            "never"
        ],
        "no-unused-vars": [
            "warn",
            {
                "args": "after-used",
                "caughtErrors": "none"
            }
        ],
        "semi": [
            "error",
            "always"
        ],
        "operator-linebreak": [
            "error",
            "before",
            {
                "overrides": {
                    "?": "before",
                    ":": "before"
                }
            }
        ],
        "no-mixed-operators": "error",
        "keyword-spacing": "off",
        "@typescript-eslint/keyword-spacing": [
            "error",
            {
                "before": true,
                "after": true
            }
        ],
        "function-call-argument-newline": [
            "error",
            "consistent"
        ],
        "function-paren-newline": [
            "error",
            "multiline-arguments"
        ],
        "newline-per-chained-call": [
            "error",
            {
                "ignoreChainWithDepth": 1
            }
        ],
        "array-bracket-newline": [
            "error",
            {
                "multiline": true
            }
        ],
        // this fails on TS specific items ex. interface
        "padding-line-between-statements": "off",
        "@typescript-eslint/padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": "import",
                "next": "*"
            },
            {
                "blankLine": "any",
                "prev": "import",
                "next": "import"
            },
            {
                "blankLine": "always",
                "prev": [
                    "multiline-const",
                    "export"
                ],
                "next": [
                    "multiline-const",
                    "export"
                ]
            },
            {
                "blankLine": "always",
                "prev": "*",
                "next": "block-like"
            },
            {
                "blankLine": "always",
                "prev": "block-like",
                "next": "*"
            }
        ],
        "func-style": [
            "error",
            "expression"
        ],
        "space-before-blocks": "error",
        "no-mixed-spaces-and-tabs": "error",
        "no-negated-condition": "error",
        "no-trailing-spaces": "error",
        "multiline-ternary": [
            "error",
            "always-multiline"
        ],
        "no-multiple-empty-lines": [
            "error",
            {
                "max": 2,
                "maxEOF": 0,
                "maxBOF": 0
            }
        ],
        "no-unneeded-ternary": "error",
        "prefer-object-spread": "error",
        "quote-props": [
            "error",
            "as-needed"
        ],
        "semi-spacing": [
            "error",
            {
                "before": false,
                "after": true
            }
        ],
        "wrap-regex": "error",
        "block-spacing": "error",
        "space-infix-ops": "error",
        "no-case-declarations": "error",
        "no-unsafe-finally": "error",
        "no-unreachable": "error",
        "no-empty-pattern": "error",
        "@typescript-eslint/semi": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/ban-ts-ignore": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "warn",
        "@typescript-eslint/member-delimiter-style": "error",
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "default",
                "format": [
                    "camelCase"
                ]
            },
            {
                "selector": "variable",
                "format": [
                    "camelCase",
                    "UPPER_CASE"
                ]
            },
            {
                "selector": "parameter",
                "format": [
                    "camelCase"
                ],
                "leadingUnderscore": "allow"
            },
            {
                "selector": "memberLike",
                "format": [
                    "camelCase"
                ]
            },
            {
                "selector": "typeLike",
                "format": [
                    "PascalCase"
                ]
            },
            {
                "selector": "enumMember",
                "format": [
                    "PascalCase",
                    "UPPER_CASE"
                ]
            }
        ],
        "jest/expect-expect": [
            "warn",
            {
                "assertFunctionNames": [
                    "expect"
                ]
            }
        ],
        "jest/prefer-lowercase-title": [
            "error",
            {
                "allowedPrefixes": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "PATCH"
                ]
            }
        ],
        "jest/no-mocks-import": "off",
        "jest/prefer-to-be": "error",
        "jest/prefer-to-contain": "error",
        "jest/prefer-to-have-length": "error"
    }
}